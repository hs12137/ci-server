name: Spring Boot CI/CD

on:
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  ci:
    runs-on: "ubuntu-latest"
#    permissions:
#      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      
    - name: chmod 
      run: chmod 744 gradlew
      if: runner.os == 'Linux' || runner.os == 'macOS'  
      
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Docker Login
      uses: docker/login-action@v3.2.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker build
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:prod .

    - name: Docker push
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:prod

    - name: Deploy to GCP VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PASSWORD }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:prod
          docker rm -f devops-test
          docker run -d --name devops-test -e profiles=prod -e username=${{ secrets.SSH_DB_USERNAME }} -e password=${{ secrets.SSH_DB_PASSWORD }} --network server ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:prod


  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
